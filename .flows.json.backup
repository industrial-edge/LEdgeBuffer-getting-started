[
    {
        "id": "340a3dee.491f92",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8b69f966.e7edf8",
        "type": "tab",
        "label": "LEdgeBuffer - main",
        "disabled": false,
        "info": "//=============================================================================\r\n// SIEMENS AG\r\n// (c)Copyright 2021 All Rights Reserved\r\n//------------------------------------------------------------------------------------------\r\n// Library: LEdgeBuffer\r\n// Tested with: S7-1516F-3 PN/DP, V 2.8, TIA Portal V16\r\n// Engineering: ---\r\n// Restrictions: ---\r\n// Requirements: \r\n// Functionality: provide a user interface for controlling the application \r\n// \"LEdgeBuffer\" in the SIMATIC PLC \r\n// Support: tech.team.motioncontrol@siemens.com\r\n// Note: Required \r\n/  - Node-red 1.2.5 \r\n// - Installed Palletes : OPC-UA NPM 2.117 / UI-LED / DASHBOARDS\r\n//------------------------------------------------------------------------------------------\r\n// Change log table:\r\n// Version    Date          Expert in charge    Changes applied\r\n// 01.00      19/04/2021    APC PRG - FC        First release\r\n// 01.10      10/05/2021    APC PRG - FC        BugFix \r\nMaitenance release\r\n// 01.20      10/06/2021    APC PRG - FC        BugFix\r\n"
    },
    {
        "id": "874e138e.ab76e",
        "type": "tab",
        "label": "LEdgeBuffer - HMI",
        "disabled": false,
        "info": "//=============================================================================\r\n// SIEMENS AG\r\n// (c)Copyright 2021 All Rights Reserved\r\n//------------------------------------------------------------------------------------------\r\n// Library: LEdgeBuffer\r\n// Tested with: S7-1516F-3 PN/DP, V 2.8, TIA Portal V16\r\n// Engineering: ---\r\n// Restrictions: ---\r\n// Requirements: ---\r\n// Functionality: provide a user interface for controlling the application \"LEdgeBuffer\" in the SIMATIC PLC \r\n// Support: tech.team.motioncontrol@siemens.com\r\n// Note: ---\r\n//------------------------------------------------------------------------------------------\r\n// Change log table:\r\n// Version    Date          Expert in charge    Changes applied\r\n// 01.00      19/04/2021    APC PRG - FC        First release\r\n"
    },
    {
        "id": "d41311b0.95e7c",
        "type": "tab",
        "label": "LEdgeBuffer - FFT",
        "disabled": false,
        "info": "//=============================================================================\r\n// SIEMENS AG\r\n// (c)Copyright 2021 All Rights Reserved\r\n//------------------------------------------------------------------------------------------\r\n// Library: LEdgeBuffer\r\n// Tested with: S7-1516F-3 PN/DP, V 2.8, TIA Portal V16\r\n// Engineering: ---\r\n// Restrictions: ---\r\n// Requirements: ---\r\n// Functionality: provide a user interface for controlling the application \"LEdgeBuffer\" in the SIMATIC PLC \r\n// Support: tech.team.motioncontrol@siemens.com\r\n// Note: ---\r\n//------------------------------------------------------------------------------------------\r\n// Change log table:\r\n// Version    Date          Expert in charge    Changes applied\r\n// 01.00      19/04/2021    APC PRG - FC        First release\r\n"
    },
    {
        "id": "a0568e71.72952",
        "type": "subflow",
        "name": "opcxml",
        "info": "OPC XML Client  \n\n### Inputs\n---\n1.  url  \nIf not configured in the node, this property sets the url of the request.\n2.  action  \nIf action <msg.action> is configured in the node, this property sets the action of the request.\nAvailable actions are\n - GetStatus\n - Read\n - Write\n - Subscribe\n - SubscriptionPolledrefresh\n - SubscriptionCancel\n - Browse\n - GetProperties\n3. payload  \nThe payload defines the details of the action. Each action has different payload structure.  \n - Read\n ```\n{\n   \"ItemPath\": <string>, optional\n   \"ItemList\": [\n        {\n            \"ClientItemHandle\": <string>, optioanl\n            \"ItemName\": <string> required\n        },\n        ...\n]}```\n - Write\n ```\n{\n   \"ItemPath\": <string>,\n   \"ItemList\": [\n        {\n            \"ClientItemHandle\": <string>, optional\n            \"ItemName\": <string>, required\n            \"Value\": <>, required\n            \"Type\": <string> required as retrieved from GetProperties action  \n        },\n        ...\n]}```\n - Subscribe\n ```\n{\n   \"SubscriptionPingRate\": <number>, optional defaults to 60000 ms  \n   \"requestedSamplingRate\": <number>, optional defaults to 1000 ms  \n   \"ClientRequestHandle\": <string>, optional\n   \"ItemPath\": <string>,\n   \"ItemList\": [\n        {\n            \"ClientItemHandle\": <string>, optional  \"ItemName\": <string> required\n        },\n        ...\n]}```\n - SubscriptionPolledRefresh ```payload = {'ServerSubHandle': <string>}```\n - SubscriptionCancel ```payload = {'ServerSubHandle': <string>}```\n - Browse ```payload = {'ItemName': <string>}```  \n - GetProperties ```payload = {'ItemName': <string>}```  \n\n4. options  \n''options.raw = true'' to skip parsing of XML result  \n---\n\n### Example  \nBrowse Advosol public server  \n```  \nmsg.url = 'http://info.advosol.com/XMLDADemo/XML_Sim/OpcXmlDaServer.asmx'  \nmsg.action = 'Browse'\nmsg.payload = {\"ItemName\": \"\"}\n```\n\n### Details\nUse this flow at your own risk. This \"client\" is not certified, nor based on any documentation. Its just loosely a result of testing communication with a couple of OPC XML servers that happen to be within reach.\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 180,
                "wires": [
                    {
                        "id": "63e32c20.b76e94"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 980,
                "wires": [
                    {
                        "id": "12f2c851.6e7428",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "action",
                "type": "str",
                "value": "GetStatus",
                "ui": {
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "GetStatus"
                                },
                                "v": "GetStatus"
                            },
                            {
                                "l": {
                                    "en-US": "Read"
                                },
                                "v": "Read"
                            },
                            {
                                "l": {
                                    "en-US": "Write"
                                },
                                "v": "Write"
                            },
                            {
                                "l": {
                                    "en-US": "Subscribe"
                                },
                                "v": "Subscribe"
                            },
                            {
                                "l": {
                                    "en-US": "SubscriptionPolledRefresh"
                                },
                                "v": "SubscriptionPolledRefresh"
                            },
                            {
                                "l": {
                                    "en-US": "SubscriptionCancel"
                                },
                                "v": "SubscriptionCancel"
                            },
                            {
                                "l": {
                                    "en-US": "Browse"
                                },
                                "v": "Browse"
                            },
                            {
                                "l": {
                                    "en-US": "GetProperties"
                                },
                                "v": "GetProperties"
                            },
                            {
                                "l": {
                                    "en-US": "<msg.action>"
                                },
                                "v": ""
                            }
                        ]
                    }
                }
            },
            {
                "name": "url",
                "type": "str",
                "value": "",
                "ui": {
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "raw",
                "type": "bool",
                "value": "false",
                "ui": {
                    "type": "checkbox"
                }
            }
        ],
        "color": "#da9",
        "outputLabels": [
            "payload"
        ]
    },
    {
        "id": "686854ac.7ba71c",
        "type": "mqtt-broker",
        "name": "ie_databus",
        "broker": "ie_databus",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "dc32af0d.34a86",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.1.10:4840",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "17a9f148.cef7ff",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "LEdgeBuffer_custom_profile",
                "default": "#4B7930",
                "baseColor": "#0087be",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0087be",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#000028",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#00557c",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0087be",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "SIMATIC LEdgeBuffer- Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "f7711879.dcd6d8",
        "type": "ui_group",
        "name": "FC Sampling - status outputs",
        "tab": "5a5a4f80.00602",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a4dbd288.61bbf",
        "type": "ui_group",
        "name": "Application status",
        "tab": "5a5a4f80.00602",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "412cb225.cb759c",
        "type": "ui_group",
        "name": "Application control",
        "tab": "5a5a4f80.00602",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5a5a4f80.00602",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "68c4c8e7.fbab58",
        "type": "ui_tab",
        "name": "Signal selector",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e6fc51a8.dea27",
        "type": "ui_tab",
        "name": "Data buffer",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "800d2573.488c88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 16,
        "height": 1
    },
    {
        "id": "eca988d6.7262e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 16,
        "height": 1
    },
    {
        "id": "ca8a134c.9286f",
        "type": "ui_group",
        "name": "PLC data",
        "tab": "e6fc51a8.dea27",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2da880c3.cfea2",
        "type": "ui_tab",
        "name": "Configuration",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b9c131fd.f3423",
        "type": "ui_group",
        "name": "Sampling setting",
        "tab": "2da880c3.cfea2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "645afd95.0c0204",
        "type": "ui_group",
        "name": "Sampling data header",
        "tab": "e6fc51a8.dea27",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "91d43225.32695",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "412cb225.cb759c",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "41e44911.714d48",
        "type": "ui_group",
        "z": "8b69f966.e7edf8",
        "name": "Real",
        "tab": "68c4c8e7.fbab58",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "95bebd27.55439",
        "type": "ui_group",
        "z": "8b69f966.e7edf8",
        "name": "Int",
        "tab": "68c4c8e7.fbab58",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "26105fe5.6f735",
        "type": "ui_group",
        "z": "8b69f966.e7edf8",
        "name": "Word",
        "tab": "68c4c8e7.fbab58",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "6eced533.6179ac",
        "type": "ui_group",
        "name": "Trace visualization",
        "tab": "5a5a4f80.00602",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": true
    },
    {
        "id": "4e4fd74.ed7bd28",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "64961176.5e14a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "f77998da.8d9af8",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://apc0058-x2.ppmd.siemens.net:4840",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "7ffd33fa.85af8c",
        "type": "s7comm",
        "ip": "192.168.1.7",
        "port": "102",
        "rack": "0",
        "slot": "2",
        "payload": [
            {
                "S7_Type": "DB",
                "S7_DBnum": "0",
                "S7_Datatype": "X",
                "S7_Offset": "0",
                "S7_BitOffset": "0",
                "S7_Quantity": "1",
                "S7_Name": "Signal"
            }
        ]
    },
    {
        "id": "ee018e8f.a3dc6",
        "type": "function",
        "z": "8b69f966.e7edf8",
        "name": "OPC load/read handler",
        "func": "var OPC_UA_readMulStatus = flow.get(\"OPC_UA_readMulStatus\") || \"init2\";\nvar stateMachineOPCread = flow.get(\"stateMachineOPCread\") || \"init\";\nvar loadedBatch = flow.get(\"loadedBatch\") || \"none\";\nvar command = msg.payload;\nvar topic = msg.topic;\nvar msgReturn = { payload: null, topic: null, recipientOPC: true }; // declare a new message for returning \nvar statusCurrentNode = flow.get(\"statusCurrentNode\") || \"init\";\nvar batchOPCitems = flow.get(\"batchOPCitems\") || {\n  dataBuffer: [\n    // nothing\n    //#region dataBuffer\n    //#region PLC data\n    { topic: 'ns=3;s=SerialNumber' },\n    { topic: 'ns=3;s=SoftwareRevision' },\n    { topic: 'ns=3;s=Model' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"bufferDone\"' },\n    //#endregion\n\n    //#region buffer header\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"firstTriggerSampleTimestamp\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"lastSampleTimestamp\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"firstTriggerSample\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"lastSample\"' },\n    //#endregion\n\n    //#region samples - REAL\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[0].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[1].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[2].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[3].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[4].\"sampleNo\"' },\n    //#endregion\n\n    //#region samples - INT\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[0].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[1].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[2].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[3].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[4].\"sampleNo\"' },\n    //#endregion\n\n    //#region samples - DWORD\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[0].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[1].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[2].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[3].\"sampleNo\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[4].\"sampleNo\"' },\n    //#endregion\n\n    //#region status\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"valid\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"busy\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"error\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"status\"' },\n    //#endregion\n\n    //#endregion\n\n  ],\n  HMI: [\n    //#region HMI DATA\n\n    //#region control and monitoring bits \n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"enable\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"trigger\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"readyForTrigger\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"bufferDone\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"enableSampling\"' },\n    //#endregion Buffer \n\n    //#region selector\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[0].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[1].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[2].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[3].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[4].\"signalSelector\"' },\n\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[0].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[1].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[2].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[3].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[4].\"signalSelector\"' },\n\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[0].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[1].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[2].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[3].\"signalSelector\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[4].\"signalSelector\"' },\n    //#endregion\n\n    //#region samplingSettings\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"preTriggerPercentage\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"enableMapping\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"enableSamplingTime\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"samplingTime\"' },\n    //#endregion\n\n    //#region status\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"valid\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"busy\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"error\"' },\n    { topic: 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"status\"' }\n    //#endregion\n\n    //#endregion HMI DATA\n\n  ]\n};\n// end variable declaration section\n\n\n\n// Check command and topic\nswitch (command) {\n  case 'read':\n    switch (topic) {\n      case 'buffer':\n        // code\n        flow.set(\"dataBufferSamples\", batchOPCitems.dataBuffer);\n        OPCcommand(command, topic)\n        break;\n      case 'HMI data':\n        // code\n        flow.set(\"dataBufferSamples\", batchOPCitems.HMI);\n        OPCcommand(command, topic)\n        break;\n      default:\n      // do nothing   \n      msgReturn.recipientOPC = false\n    }\n    break;\n  // code\n  case 'reset':\n    OPCcommand(command)\n    // do nothing\n    break;\n  default:\n        // do nothing   \n    msgReturn.recipientOPC = false\n    msgReturn = msg\n\n} // end of command Switch \n\nfunction OPCcommand(command, topic) {\n  // State machine of the node to:\n  // 1. Check OPC communication status\n  // 2. If OPC OK - go to state \"listening to commands\"\n  // 3. Check commands comming \n  //    A) READ BUFFER: meaning read variables from the Edge Buffer\n  //    B) READ HMI DATA: meaning read variables from the Edge Buffer\n  // 4. Check if ITEMS are already loaded to PLC (check variable \"actualBatch\" -- if none then)\n  //    load items tables (fire object: array of topics) ---> wait for the objects to be loaded (read all status update of OPC UA NODE) /\n  //---> after/if? objects loaded ---> send \"read multiple / all\"\n  //\n  // Function state machine\n  if (command == \"reset\") {\n    // reset code\n    flow.set(\"dataBufferSamples\", null);\n    statusCurrentNode = \"init\";\n    flow.set(\"batchOPCitems\", null);\n    msgReturn.topic = \"clearitems\"\n    msgReturn.payload = \"functions objects init done\"\n    flow.set(\"batchOPCitems\", batchOPCitems);\n  } else if ((statusCurrentNode === \"init\") & ((stateMachineOPCread == \"ready for items\") || (stateMachineOPCread == \"items cleared - ready for items\"))) {\n    // if not reset\n    // set items to fire to OPC client\n    msgReturn = flow.get(\"dataBufferSamples\")\n    // change status to wait untill all items are read \n    statusCurrentNode = \"waiting for items to be loaded\";\n    // save which batch of item was loaded \n    flow.set(\"loadedBatch\", topic)\n    // set items to fire to OPC client\n    msgReturn = flow.get(\"dataBufferSamples\")\n  } else if (statusCurrentNode === \"waiting for items to be loaded\") {\n    if (stateMachineOPCread == \"OPC items loaded\") {\n      statusCurrentNode = \"items loaded = read enabled\";\n      msgReturn.payload = \"ALL\"\n      msgReturn.topic = \"readmultiple\"\n\n    }\n\n  } else if (statusCurrentNode === \"items loaded = read enabled\") {\n    // if items has been loaded previously, check that current topic is the same as the item loades, if yes, then read, else \n    // clear items and repeat procedure of loading items until items are returned by the OPC UA\n\n    if (stateMachineOPCread == \"reading\") {\n      if (flow.get(\"loadedBatch\") == topic) {\n        statusCurrentNode = \"items loaded = read enabled\";\n        msgReturn.payload = \"ALL\";\n        msgReturn.topic = \"readmultiple\";\n      } else {\n            flow.set(\"dataBufferSamples\", null);\n    statusCurrentNode = \"init\";\n    flow.set(\"batchOPCitems\", null);\n    msgReturn.topic = \"clearitems\"\n    msgReturn.payload = \"functions objects init done\"\n    flow.set(\"batchOPCitems\", batchOPCitems);  \n        // save which batch of item was loaded \n    flow.set(\"loadedBatch\", topic)\n      }\n\n    }\n  }\n\n    msgReturn.recipientOPC = false;\n    msgReturn.statusCurrentNode = statusCurrentNode ;\n    msgReturn.stateMachineOPCread =   stateMachineOPCread;\n}\n\n// save variables in memory for next flows\nflow.set(\"statusCurrentNode\", statusCurrentNode);\nflow.set(\"batchOPCitems\", batchOPCitems)\n\nreturn [msgReturn];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 180,
        "wires": [
            [
                "1e1df758.7549b9"
            ]
        ]
    },
    {
        "id": "1e1df758.7549b9",
        "type": "OpcUa-Client",
        "z": "8b69f966.e7edf8",
        "endpoint": "dc32af0d.34a86",
        "action": "readmultiple",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "1",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "OPC UA readmultiple",
        "x": 860,
        "y": 400,
        "wires": [
            [
                "6c7ca7ad.eb8828"
            ]
        ]
    },
    {
        "id": "cf33967e.8ffbb8",
        "type": "function",
        "z": "8b69f966.e7edf8",
        "name": "status OPC",
        "func": "var itemsLoadedToOPCUA = flow.get(\"counterStatus\") || 0;\nvar bigMsg = flow.get(\"dataBufferSamples\") || [];\nvar stateMachineOPCread = \"not connected\";\nvar status = msg.status || {\n  text: \"emptyStatus\"\n};\nvar OPC_UA_readMulStatus = null;\nvar total = bigMsg.length\n\n// Check status of OPC_UA NODE\n\nswitch (status.text) {\n  case \"nodeId stored\":\n  // Count each time an item is stored for reading\n    if (itemsLoadedToOPCUA < (bigMsg.length - 1)) {\n      itemsLoadedToOPCUA += 1;\n       stateMachineOPCread = \"loading items\"\n    } else {\n      // reset counter and give flag to next node \n      itemsLoadedToOPCUA += 1;\n      stateMachineOPCread = \"OPC items loaded\"\n    }\n    break;\n\n  case \"session active\":\n    // do nothing all OK\n      itemsLoadedToOPCUA = 0;\n   stateMachineOPCread = \"Session active after Init\"\n    break;\n  case \"clear items\":\n      // reset all after items were cleared\n    itemsLoadedToOPCUA = 0;\n    stateMachineOPCread = \"items cleared - ready for items\"\n    break;\n  case \"active multiple reading\":\n      // do nothing\n    stateMachineOPCread = \"reading\"\n    break;\n  default:\n\n}\n\n\nflow.set(\"counterStatus\", itemsLoadedToOPCUA);\nflow.set(\"OPC_UA_readMulStatus\", status.text);\nflow.set(\"stateMachineOPCread\", stateMachineOPCread);\n\n\nmsg.stateMachineOPCread = stateMachineOPCread ;\n\nnode.status({fill:\"green\",shape:\"dot\",text:stateMachineOPCread +\"|| items loaded: \" + itemsLoadedToOPCUA });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "1956f2f4.14807d"
            ]
        ]
    },
    {
        "id": "ea227c76.2ec97",
        "type": "status",
        "z": "8b69f966.e7edf8",
        "name": "status read multiple",
        "scope": [
            "1e1df758.7549b9"
        ],
        "x": 110,
        "y": 300,
        "wires": [
            [
                "cf33967e.8ffbb8"
            ]
        ]
    },
    {
        "id": "d36a7bed.239c28",
        "type": "inject",
        "z": "8b69f966.e7edf8",
        "name": "reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "reset",
        "payload": "reset",
        "payloadType": "str",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "757cb071.5beec"
            ]
        ]
    },
    {
        "id": "1369a055.300d1",
        "type": "inject",
        "z": "8b69f966.e7edf8",
        "name": "read buffer",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "c0a4f7d6.64b938"
            ]
        ]
    },
    {
        "id": "6c7ca7ad.eb8828",
        "type": "function",
        "z": "8b69f966.e7edf8",
        "name": "Parse OPC to JSON",
        "func": "var msgPrevNode = msg;\nvar itemFromOPC = new Object(msgPrevNode.items);\nvar valueObjects = new Object(msgPrevNode.payload); //[].value\nvar tuplesOPC = [];\n\n//#region\n// Declare EdgeBuffer structure to be later parsed\nvar Init_LEdgeBuffer_EdgeInterface = {\n  enable: null,\n  trigger: null,\n  bufferDone: null,\n  readyForTrigger: null,\n  enableSampling: null,\n  samplingSettings: {\n    preTriggerPercentage: null,\n    enableMapping: null,\n    enableSamplingTime: null,\n    samplingTime: null,\n  },\n  signals: {\n    reals: { traceSignal: [{ signalSelector: null, actualValue: null }, \n    { signalSelector: null, actualValue: null }, \n    { signalSelector: null, actualValue: null }, \n    { signalSelector: null, actualValue: null }, \n    { signalSelector: null, actualValue: null }] },\n    ints: { traceSignal: [{ signalSelector: null },\n    { signalSelector: null, actualValue: null }, \n    { signalSelector: null, actualValue: null }, \n    { signalSelector: null, actualValue: null }, \n    { signalSelector: null, actualValue: null }] },\n    dwords: { traceSignal: [{ signalSelector: null }, \n    { signalSelector: null, actualValue: null  }, \n    { signalSelector: null, actualValue: null  }, \n    { signalSelector: null, actualValue: null  }, \n    { signalSelector: null, actualValue: null }] }\n\n  },\n  dataBuffer: {\n    header: {\n      firstTriggerSampleTimestamp: null,\n      lastSampleTimestamp: null,\n      firstTriggerSample: null,\n      lastSample: null\n    },\n\n    samples: {\n      signalREAL: [{ sampleNo: null }, { sampleNo: null }, { sampleNo: null }, { sampleNo: null }, { sampleNo: null }],\n      signalINT: [{ sampleNo: null }, { sampleNo: null }, { sampleNo: null }, { sampleNo: null }, { sampleNo: null }],\n      signalDWORD: [{ sampleNo: null }, { sampleNo: null }, { sampleNo: null }, { sampleNo: null }, { sampleNo: null }]\n    }\n\n  },\n\n  status: {\n    valid: null,\n    busy: null,\n    error: null,\n    status: null,\n  }\n\n};\n\n\n// declare JSON for other functions\nvar Init_json_buffer_file = {\n  \"plcModel\": \"SIMATIC_Buffer\",\n  \"measurementName\": \"LEdgeBuffer\",\n  \"duration\": 4000,\n  \"cycletime\": 4.1,\n  \"plcSerialNumber\": \"SIMATIC_serial number\",\n  \"plcFirmwareVersion\": \"V 2.5\",\n  \"measurements\": [],\n  \"traceHeader\" : {\n  \"startBufferSample\": { \"number\": 0, \"timestamp\": null },\n  \"endBufferSample\": { \"number\": null, \"timestamp\": null },\n  \"firstTriggerSample\": { \"number\": null, \"timestamp\": null },\n  \"lastSample\": { \"number\": null, \"timestamp\": null },\n  \"totalSamples\": 0\n}\n}  \n\n//#endregion init variable\n\n//Declare EdgeBuffer structure to be later parsed\nvar LEdgeBuffer_EdgeInterface = global.get(\"Json_HMI\") || Init_LEdgeBuffer_EdgeInterface \nvar json_buffer_file = global.get(\"Json_HMI2\") || Init_json_buffer_file\nvar loadedBatch = flow.get(\"loadedBatch\") || \"no batch type\";\n\n\n\n// Combine items into single array for later iteration\nvar i;\nfor (i = 0; i < itemFromOPC.length; i++) {\n  tuplesOPC[i] = { name: itemFromOPC[i], value: valueObjects[i].value };\n}\n\n// parse all objects read from OPC and get their values to the JSON files for the HMI\ntuplesOPC.forEach(matchOPCtoJSON);\n\nfunction matchOPCtoJSON(object, index, array) {\n\n  switch (object.name) {\n    // general PLC data\n    case 'ns=3;s=SerialNumber':\n      json_buffer_file.plcSerialNumber = object.value.value;\n      break;\n    case 'ns=3;s=SoftwareRevision':\n      json_buffer_file.plcFirmwareVersion = object.value.value;\n      break;\n    case 'ns=3;s=Model':\n      json_buffer_file.plcModel = object.value.value.text;\n      break;\n    // general bit for application control\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"enable\"':\n      LEdgeBuffer_EdgeInterface.enable = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"trigger\"':\n      LEdgeBuffer_EdgeInterface.trigger = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"bufferDone\"':\n      LEdgeBuffer_EdgeInterface.bufferDone = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"readyForTrigger\"':\n      LEdgeBuffer_EdgeInterface.readyForTrigger = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"enableSampling\"':\n      LEdgeBuffer_EdgeInterface.enableSampling = object.value.value;\n      break;\n    //  samplingSettings\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"preTriggerPercentage\"':\n      LEdgeBuffer_EdgeInterface.samplingSettings.preTriggerPercentage = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"enableMapping\"':\n      LEdgeBuffer_EdgeInterface.samplingSettings.enableMapping = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"enableSamplingTime\"':\n      LEdgeBuffer_EdgeInterface.samplingSettings.enableSamplingTime = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"samplingTime\"':\n      LEdgeBuffer_EdgeInterface.samplingSettings.samplingTime = object.value.value;\n      break;\n    //region  signals:\n    //region Real\n    //region Trace Signal\n    //region signalSelector:\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[0].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.reals.traceSignal[0].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[1].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.reals.traceSignal[1].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[2].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.reals.traceSignal[2].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[3].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.reals.traceSignal[3].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[4].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.reals.traceSignal[4].signalSelector = object.value.value;\n      break;\n      //endregion signalSelector:\n    //endregion Trace Signal\n    //endregion Real\n    \n        //region Ints\n    //region Trace Signal\n    //region signalSelector:\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[0].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.ints.traceSignal[0].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[1].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.ints.traceSignal[1].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[2].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.ints.traceSignal[2].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[3].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.ints.traceSignal[3].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[4].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.ints.traceSignal[4].signalSelector = object.value.value;\n      break;\n      //endregion signalSelector:\n    //endregion Trace Signal\n    //endregion Int\n    \n    //region DWord\n    //region Trace Signal\n    //region signalSelector:\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[0].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.dwords.traceSignal[0].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[1].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.dwords.traceSignal[1].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[2].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.dwords.traceSignal[2].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[3].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.dwords.traceSignal[3].signalSelector = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[4].\"signalSelector\"':\n      LEdgeBuffer_EdgeInterface.signals.dwords.traceSignal[4].signalSelector = object.value.value;\n      break;\n      //endregion signalSelector:\n    //endregion Trace Signal\n    //endregion Int\n    \n    //endregion\n    //----\n    // data buffer\n    //#region \"header data\"\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"firstTriggerSampleTimestamp\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.header.firstTriggerSampleTimestamp = simaticDateToJSdate(object.value.value);\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"lastSampleTimestamp\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.header.lastSampleTimestamp = simaticDateToJSdate(object.value.value);\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"firstTriggerSample\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.header.firstTriggerSample = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"header\".\"lastSample\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.header.lastSample = object.value.value;\n      break;\n    //#endregion \n\n    //#region \"trace data\" // array of samples \n    //#region - REAL\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[0].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalREAL[0].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[1].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalREAL[1].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[2].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalREAL[2].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[3].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalREAL[3].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalREAL\"[4].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalREAL[4].sampleNo = Object.values(object.value.value) ;\n      break;\n    //#endregion \n    //#region - INT\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[0].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalINT[0].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[1].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalINT[1].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[2].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalINT[2].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[3].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalINT[3].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalINT\"[4].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalINT[4].sampleNo = Object.values(object.value.value) ;\n      break;\n    //#endregion \n\n    //#region - DWORDS\n\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[0].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalDWORD[0].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[1].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalDWORD[1].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[2].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalDWORD[2].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[3].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalDWORD[3].sampleNo = Object.values(object.value.value) ;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"dataBuffer\".\"samples\".\"signalDWORD\"[4].\"sampleNo\"':\n      LEdgeBuffer_EdgeInterface.dataBuffer.samples.signalDWORD[4].sampleNo = Object.values(object.value.value) ;\n      break;\n\n    //#endregion \n\n    //#endregion \n\n    //#region  \"Application status\"\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"valid\"':\n      LEdgeBuffer_EdgeInterface.status.valid = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"busy\"':\n      LEdgeBuffer_EdgeInterface.status.busy = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"error\"':\n      LEdgeBuffer_EdgeInterface.status.error = object.value.value;\n      break;\n    case 'ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"status\"':\n      LEdgeBuffer_EdgeInterface.status.status = object.value.value;\n      break;\n\n    default:\n\n\n      // First Trigger sample - Convert timestamp from PLC format into Date JS\n      function simaticDateToJSdate(simaticDateObject) {\n        if (simaticDateObject.length > 0) {\n          simaticDateObject[1] -= 1;\n          return new Date(...simaticDateObject);\n        } else {\n          return \"invalid object\";\n        }\n      }\n  }\n}\n\n//#region Process PLC header into trace data\nif (LEdgeBuffer_EdgeInterface.bufferDone === true)\n{\n  // First Trigger sample - Convert timestamp from PLC format into Date JS\n  json_buffer_file.traceHeader.firstTriggerSample.timestamp = new Date(LEdgeBuffer_EdgeInterface.dataBuffer.header.firstTriggerSampleTimestamp);\n  json_buffer_file.traceHeader.firstTriggerSample.number = LEdgeBuffer_EdgeInterface.dataBuffer.header.firstTriggerSample;\n\n  // Last Sample - Convert timestamp from PLC format into Date JS\n  json_buffer_file.traceHeader.lastSample.timestamp = new Date(LEdgeBuffer_EdgeInterface.dataBuffer.header.lastSampleTimestamp);\n  json_buffer_file.traceHeader.lastSample.number = LEdgeBuffer_EdgeInterface.dataBuffer.header.lastSample;\n\n  // Assign samples to JSON file\n  json_buffer_file.measurements = LEdgeBuffer_EdgeInterface.dataBuffer.samples;\n\n  // the calculation of total sampling length out of the buffer arrays\n  let totalSamples = LEdgeBuffer_EdgeInterface.dataBuffer.header.lastSample + 1; \n\n  // period between trigger start and sampling end.\n  let timeDiff = new Date(json_buffer_file.traceHeader.lastSample.timestamp.getTime() - json_buffer_file.traceHeader.firstTriggerSample.timestamp.getTime());\n  // Calculation of sampling time in ms\n  let samplesAfteTrigger = (json_buffer_file.traceHeader.lastSample.number - json_buffer_file.traceHeader.firstTriggerSample.number + 1)\n\n  if (samplesAfteTrigger > 0) {\n    json_buffer_file.cycletime = (timeDiff.getMilliseconds() + timeDiff.getSeconds() * 1000.0) / samplesAfteTrigger\n  }\n\n  // calculate duration in ms \n  json_buffer_file.duration = totalSamples * json_buffer_file.cycletime;\n\n  if (json_buffer_file.traceHeader.firstTriggerSample.number > 0) {\n    // correct Start buffer sample Timestamp\n    json_buffer_file.traceHeader.startBufferSample.timestamp = json_buffer_file.traceHeader.firstTriggerSample.timestamp;\n  }\n  else {\n    // calculate start of the sampling (buffer 1st sample timestamp)\n    json_buffer_file.traceHeader.startBufferSample.timestamp = new Date(json_buffer_file.traceHeader.firstTriggerSample.timestamp.getTime() - json_buffer_file.traceHeader.firstTriggerSample.number * json_buffer_file.cycletime);\n  }\n\n  // Recalculate back the end of the trace for verification\n  json_buffer_file.traceHeader.endBufferSample.timestamp = new Date(json_buffer_file.traceHeader.startBufferSample.timestamp.getTime() + totalSamples * json_buffer_file.cycletime);\n  json_buffer_file.traceHeader.endBufferSample.number = JSON.parse(totalSamples);\n  json_buffer_file.traceHeader.totalSamples = JSON.parse(totalSamples);\n  json_buffer_file.traceHeader.timeDiff = Date.parse(timeDiff);\n  \n  batchDestination = \"MQTT\"\n}\n//#endregion \nglobal.set(\"Json_HMI\", LEdgeBuffer_EdgeInterface);\nglobal.set(\"Json_HMI2\", json_buffer_file);\nvar msgNextNode = { payload: Date.now() };\n\nmsgNextNode.batchDestination = flow.get (\"batchDestination\") || null ; // get batch destination from the flow \nmsgNextNode.rawOPCarrayNameValue = tuplesOPC; // save for diagnostic\nmsgNextNode.loadedBatch = loadedBatch; // save for diagnostic\nmsgNextNode.LEdgeBuffer_EdgeInterface = LEdgeBuffer_EdgeInterface; // save for diagnostic\nmsgNextNode.json_buffer_file = json_buffer_file; // save for diagnostic\n\nreturn msgNextNode;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "d680cf70.abd68",
                "3e8486e6.f1733a",
                "9ad58ba2.4ec948"
            ]
        ]
    },
    {
        "id": "21098c.c9070674",
        "type": "link out",
        "z": "8b69f966.e7edf8",
        "name": "to_business_logic_flow_HMI",
        "links": [
            "c8556d48.49951"
        ],
        "x": 1595,
        "y": 420,
        "wires": []
    },
    {
        "id": "c8556d48.49951",
        "type": "link in",
        "z": "874e138e.ab76e",
        "name": "in_business_logic_flow",
        "links": [
            "21098c.c9070674"
        ],
        "x": 115,
        "y": 60,
        "wires": [
            [
                "a694bede.1ae76"
            ]
        ]
    },
    {
        "id": "a694bede.1ae76",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "get json to payload and change topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "update HMI",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "json_buffer_file",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 60,
        "wires": [
            [
                "b720fd8e.b1d1"
            ]
        ]
    },
    {
        "id": "d680cf70.abd68",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "set Update HMI ",
        "rules": [
            {
                "t": "set",
                "p": "updateHMI",
                "pt": "msg",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 420,
        "wires": [
            [
                "21098c.c9070674"
            ]
        ]
    },
    {
        "id": "cb812177.5f50a",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "f7711879.dcd6d8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Status word",
        "label": "Status word",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 910,
        "y": 980,
        "wires": []
    },
    {
        "id": "4349eabd.4cca24",
        "type": "function",
        "z": "874e138e.ab76e",
        "name": "convert status word",
        "func": "msg.payload = msg.payload.toString(16);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 980,
        "wires": [
            [
                "cb812177.5f50a"
            ]
        ]
    },
    {
        "id": "6f18ffd0.31c7e",
        "type": "ui_led",
        "z": "874e138e.ab76e",
        "order": 1,
        "group": "f7711879.dcd6d8",
        "width": 0,
        "height": 0,
        "label": "Valid",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#808080",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": false,
        "name": "valid",
        "x": 670,
        "y": 860,
        "wires": []
    },
    {
        "id": "42ae76de.bc3cb8",
        "type": "ui_led",
        "z": "874e138e.ab76e",
        "order": 2,
        "group": "f7711879.dcd6d8",
        "width": 0,
        "height": 0,
        "label": "Busy",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#808080",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": false,
        "name": "Busy",
        "x": 670,
        "y": 900,
        "wires": []
    },
    {
        "id": "6d782282.30028c",
        "type": "ui_led",
        "z": "874e138e.ab76e",
        "order": 1,
        "group": "a4dbd288.61bbf",
        "width": 0,
        "height": 0,
        "label": "Application enabled",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#808080",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": false,
        "name": "enabled",
        "x": 680,
        "y": 540,
        "wires": []
    },
    {
        "id": "309f243f.622ffc",
        "type": "ui_led",
        "z": "874e138e.ab76e",
        "order": 2,
        "group": "a4dbd288.61bbf",
        "width": 0,
        "height": 0,
        "label": "Ready for trigger",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#808080",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": false,
        "name": "readyForTrigger",
        "x": 700,
        "y": 780,
        "wires": []
    },
    {
        "id": "4c8f4623.844d78",
        "type": "ui_led",
        "z": "874e138e.ab76e",
        "order": 3,
        "group": "a4dbd288.61bbf",
        "width": 0,
        "height": 0,
        "label": "Buffer Done",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#808080",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": false,
        "name": "Buffer Done",
        "x": 690,
        "y": 820,
        "wires": []
    },
    {
        "id": "c13bce0.fbae03",
        "type": "ui_led",
        "z": "874e138e.ab76e",
        "order": 4,
        "group": "a4dbd288.61bbf",
        "width": 0,
        "height": 0,
        "label": "Trigger",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#808080",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": false,
        "name": "Trigger",
        "x": 680,
        "y": 660,
        "wires": []
    },
    {
        "id": "7c070079.bbaee",
        "type": "ui_led",
        "z": "874e138e.ab76e",
        "order": 3,
        "group": "f7711879.dcd6d8",
        "width": 0,
        "height": 0,
        "label": "Error",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#808080",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": false,
        "name": "Error",
        "x": 670,
        "y": 940,
        "wires": []
    },
    {
        "id": "b720fd8e.b1d1",
        "type": "switch",
        "z": "874e138e.ab76e",
        "name": "Switch data buffer",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "update HMI",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "adc09423.857008",
                "6d3f7b36.64a204",
                "cd1b541b.fc9b78",
                "c8ab057c.c530f8",
                "d90a53df.20c9a",
                "62bdc2e6.d67b7c",
                "364c3f1c.c19b8",
                "6cb7cc19.a1f334",
                "b688f4ad.4344f8",
                "fedda457.650238",
                "abb81504.7e7888",
                "51467317.a106cc",
                "33a872df.95a85e",
                "8e6bfd60.eb4da",
                "503ec5bd.bd50ec",
                "89edacaf.e808e",
                "7d9002e6.6296bc",
                "90e2a128.8bd2f",
                "d6b85d04.bc5cb",
                "d89fcd83.6d30f"
            ]
        ]
    },
    {
        "id": "e64e365a.ed0de8",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "645afd95.0c0204",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Buffer end timeStamp",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 740,
        "y": 480,
        "wires": []
    },
    {
        "id": "5a176417.98f72c",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "645afd95.0c0204",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Buffer start timeStamp",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 740,
        "y": 440,
        "wires": []
    },
    {
        "id": "adc09423.857008",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "ca8a134c.9286f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Firmware:",
        "format": "{{msg.payload.plcFirmwareVersion}}",
        "layout": "row-left",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "6d3f7b36.64a204",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "ca8a134c.9286f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Model:",
        "format": "{{msg.payload.plcModel}}",
        "layout": "row-left",
        "x": 710,
        "y": 220,
        "wires": []
    },
    {
        "id": "cd1b541b.fc9b78",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "ca8a134c.9286f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Serial Number:",
        "format": "{{msg.payload.plcSerialNumber}}",
        "layout": "row-left",
        "x": 740,
        "y": 140,
        "wires": []
    },
    {
        "id": "5e8b7dfd.ff7a64",
        "type": "ui_switch",
        "z": "874e138e.ab76e",
        "name": "Enable application",
        "label": "Enable application",
        "tooltip": "",
        "group": "412cb225.cb759c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 710,
        "y": 580,
        "wires": [
            [
                "28b92f40.4a8fc"
            ]
        ]
    },
    {
        "id": "bda7185c.b149a8",
        "type": "ui_switch",
        "z": "874e138e.ab76e",
        "name": "Trigger",
        "label": "Start recording buffer",
        "tooltip": "",
        "group": "412cb225.cb759c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 680,
        "y": 700,
        "wires": [
            [
                "8ad0d24d.f741c"
            ]
        ]
    },
    {
        "id": "2b0ecb91.1ab044",
        "type": "ui_numeric",
        "z": "874e138e.ab76e",
        "name": "Pre Trigger Buffer length (%)",
        "label": "Pre-trigger buffer length (%)",
        "tooltip": "",
        "group": "b9c131fd.f3423",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 720,
        "y": 1040,
        "wires": [
            [
                "bee00239.547cb"
            ]
        ]
    },
    {
        "id": "d4978284.a79ca",
        "type": "ui_switch",
        "z": "874e138e.ab76e",
        "name": "Enable sampling time",
        "label": "Enable sampling time",
        "tooltip": "",
        "group": "b9c131fd.f3423",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 700,
        "y": 1160,
        "wires": [
            [
                "88307462.552488"
            ]
        ]
    },
    {
        "id": "ded9f842.a2c358",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "Sampling Time",
        "label": "Sampling time (ms)",
        "tooltip": "",
        "group": "b9c131fd.f3423",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 680,
        "y": 1240,
        "wires": [
            [
                "3bcdfea2.509bd2"
            ]
        ]
    },
    {
        "id": "f774e1fa.7dc77",
        "type": "ui_switch",
        "z": "874e138e.ab76e",
        "name": "Enable mapping",
        "label": "Enable mapping",
        "tooltip": "",
        "group": "b9c131fd.f3423",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 680,
        "y": 1100,
        "wires": [
            [
                "d5ebfdc3.e083"
            ]
        ]
    },
    {
        "id": "abb81504.7e7888",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "enableSamplingTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.samplingSettings.enableSamplingTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "d4978284.a79ca"
            ]
        ]
    },
    {
        "id": "33a872df.95a85e",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "samplingTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.samplingSettings.samplingTime",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1240,
        "wires": [
            [
                "ded9f842.a2c358"
            ]
        ]
    },
    {
        "id": "84a8a239.ec6b2",
        "type": "OpcUa-Client",
        "z": "874e138e.ab76e",
        "endpoint": "dc32af0d.34a86",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "OPC write",
        "x": 1690,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "28b92f40.4a8fc",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"enable\"",
        "datatype": "Boolean",
        "value": "",
        "name": "enable",
        "x": 1070,
        "y": 580,
        "wires": [
            [
                "1ee38bb9.ae8274"
            ]
        ]
    },
    {
        "id": "8ad0d24d.f741c",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"trigger\"",
        "datatype": "Boolean",
        "value": "",
        "name": "trigger",
        "x": 1070,
        "y": 700,
        "wires": [
            [
                "1ee38bb9.ae8274"
            ]
        ]
    },
    {
        "id": "bee00239.547cb",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"preTriggerPercentage\"",
        "datatype": "UInt8",
        "value": "",
        "name": "preTriggerPercentage",
        "x": 1100,
        "y": 1040,
        "wires": [
            [
                "1ee38bb9.ae8274"
            ]
        ]
    },
    {
        "id": "d5ebfdc3.e083",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"enableMapping\"",
        "datatype": "Boolean",
        "value": "",
        "name": "enableMapping",
        "x": 1100,
        "y": 1100,
        "wires": [
            [
                "1ee38bb9.ae8274"
            ]
        ]
    },
    {
        "id": "3bcdfea2.509bd2",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"samplingTime\"",
        "datatype": "UInt8",
        "value": "",
        "name": "samplingTime",
        "x": 1080,
        "y": 1240,
        "wires": [
            [
                "1ee38bb9.ae8274"
            ]
        ]
    },
    {
        "id": "88307462.552488",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"samplingSettings\".\"enableSamplingTime\"",
        "datatype": "Boolean",
        "value": "",
        "name": "enableSamplingTime",
        "x": 1100,
        "y": 1160,
        "wires": [
            [
                "1ee38bb9.ae8274"
            ]
        ]
    },
    {
        "id": "fedda457.650238",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "pre-Trigger %",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.samplingSettings.preTriggerPercentage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1040,
        "wires": [
            [
                "2b0ecb91.1ab044"
            ]
        ]
    },
    {
        "id": "c8ab057c.c530f8",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.enable",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "6d782282.30028c",
                "5e8b7dfd.ff7a64"
            ]
        ]
    },
    {
        "id": "d90a53df.20c9a",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "trigger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.trigger",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 660,
        "wires": [
            [
                "c13bce0.fbae03",
                "bda7185c.b149a8"
            ]
        ]
    },
    {
        "id": "62bdc2e6.d67b7c",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "readyForTrigger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.readyForTrigger",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "309f243f.622ffc"
            ]
        ]
    },
    {
        "id": "364c3f1c.c19b8",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "valid",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.status.valid",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 860,
        "wires": [
            [
                "6f18ffd0.31c7e"
            ]
        ]
    },
    {
        "id": "d6b85d04.bc5cb",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "busy",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.status.busy",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 900,
        "wires": [
            [
                "42ae76de.bc3cb8"
            ]
        ]
    },
    {
        "id": "b688f4ad.4344f8",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.status.error",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 940,
        "wires": [
            [
                "7c070079.bbaee"
            ]
        ]
    },
    {
        "id": "6cb7cc19.a1f334",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.status.status",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 980,
        "wires": [
            [
                "4349eabd.4cca24"
            ]
        ]
    },
    {
        "id": "51467317.a106cc",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "enable mapping",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.samplingSettings.enableMapping",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1100,
        "wires": [
            [
                "f774e1fa.7dc77"
            ]
        ]
    },
    {
        "id": "315647e.c675cb8",
        "type": "link out",
        "z": "8b69f966.e7edf8",
        "name": "to FFT flow",
        "links": [
            "4d37c670.071968"
        ],
        "x": 1415,
        "y": 300,
        "wires": []
    },
    {
        "id": "e413a16c.9d2ab",
        "type": "function",
        "z": "d41311b0.95e7c",
        "name": "app_json_to_fft",
        "func": "var msgPrevious = msg\nvar topic = msg.topic || \"not processed\";\nvar nextMsg = { payload: null, topic: null, json: null }\n\n\n  //Copy payload to internal\n  var intJsonFile = global.get(\"Json_HMI2\");\n  var EdgeBuffer = global.get(\"Json_HMI\");\n  // Init a variable with the FFT json format\n  var json_buffer_file =\n  {\n    \"plcName\": \"SIMATIC_Buffer\",\n    \"measurementName\": \"LEdgeBuffer_fullTrace\",\n    \"traceStartType\": \"IMMEDIATE\",\n    \"duration\": 2000,\n    \"pretrigger\": 0,\n    \"ipAddress\": \"192.168.1.10\",\n    \"tracejobId\": 888,\n    \"turningSpeed\": 0,\n    \"cycletime\": 2,\n    \"plcSerialNumber\": \"SIMATIC_serial number\",\n    \"plcFirmwareVersion\": \"V 2.5\",\n    \"variables\": [\n    { \"varName\": \"Signal Real#1\", \"varType\": \"REAL\", \"measurements\": [0]},\n    { \"varName\": \"Signal Real#2\", \"varType\": \"REAL\", \"measurements\": [0]},\n    { \"varName\": \"Signal Real#3\", \"varType\": \"REAL\", \"measurements\": [0]},\n    { \"varName\": \"Signal Real#4\", \"varType\": \"REAL\", \"measurements\": [0]},\n    { \"varName\": \"Signal Real#5\", \"varType\": \"REAL\", \"measurements\": [0]}\n    ],\n    \"timestamp\": 100000000\n  }\n  // Fill the JSON file with the data from the payload\n  if (EdgeBuffer.bufferDone === true) {\n    // the variable is defined\n    json_buffer_file.variables[0].measurements = Object.values(intJsonFile.measurements.signalREAL[0].sampleNo);\n    json_buffer_file.variables[1].measurements = Object.values(intJsonFile.measurements.signalREAL[1].sampleNo);\n    json_buffer_file.variables[2].measurements = Object.values(intJsonFile.measurements.signalREAL[2].sampleNo);\n    json_buffer_file.variables[3].measurements = Object.values(intJsonFile.measurements.signalREAL[3].sampleNo);\n    json_buffer_file.variables[4].measurements = Object.values(intJsonFile.measurements.signalREAL[4].sampleNo);\n                       \n    json_buffer_file.plcFirmwareVersion = intJsonFile.plcFirmwareVersion;\n    json_buffer_file.plcName = intJsonFile.plcModel;\n    json_buffer_file.duration = intJsonFile.duration;\n    json_buffer_file.cycletime = intJsonFile.cycletime;\n    json_buffer_file.plcSerialNumber = intJsonFile.plcSerialNumber;\n    //json_buffer_file.variables[0].varName = \"signalREAL1\" // intJsonFile.variables[0].varName;\n    json_buffer_file.timestamp = new Date(intJsonFile.traceHeader.startBufferSample.timestamp).getTime();\n\n    nextMsg.payload = JSON.stringify(json_buffer_file);\n    nextMsg.json = json_buffer_file;\n    nextMsg.topic = \"LEdgeBuffer_fft_json_file\"\n\n  }\n\n  else {\n\n  }\n\n  return nextMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "f386395.d0ea5c8",
                "3001de5b.abc022",
                "8e5e2ebb.3a93"
            ]
        ]
    },
    {
        "id": "4d37c670.071968",
        "type": "link in",
        "z": "d41311b0.95e7c",
        "name": "in_to_fft",
        "links": [
            "315647e.c675cb8"
        ],
        "x": 175,
        "y": 280,
        "wires": [
            [
                "4519025a.7101cc"
            ]
        ]
    },
    {
        "id": "a49da7.39dd4258",
        "type": "mqtt out",
        "z": "8b69f966.e7edf8",
        "name": "LEdgeBuffer  mqtt out",
        "topic": "LEdgeBuffer_EdgeInterface",
        "qos": "",
        "retain": "",
        "broker": "686854ac.7ba71c",
        "x": 1720,
        "y": 500,
        "wires": []
    },
    {
        "id": "3e8486e6.f1733a",
        "type": "function",
        "z": "8b69f966.e7edf8",
        "name": "publish LedgeInteface",
        "func": "var LEdgeBuffer_EdgeInterface = global.get(\"Json_HMI\") || {\"payload\": \"zero\"};\nvar nextPayload = {payload: null }\nvar currentBatchOPC = msg.batchDestination  ||\"no buffer batch\" ;\n\nif (currentBatchOPC == \"MQTT\") {\n\nnextPayload.payload = LEdgeBuffer_EdgeInterface ;\nreturn nextPayload;\n} else {\n  nextPayload.payload = {error : \"no buffer batch\"} ;  \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1440,
        "y": 500,
        "wires": [
            [
                "a49da7.39dd4258"
            ]
        ]
    },
    {
        "id": "d3b87e.e6a4878",
        "type": "link out",
        "z": "874e138e.ab76e",
        "name": "trigger_read_OPC",
        "links": [
            "868dbabf.36f108"
        ],
        "x": 1555,
        "y": 300,
        "wires": []
    },
    {
        "id": "8e6bfd60.eb4da",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "bufferDone",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.bufferDone",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 820,
        "wires": [
            [
                "4c8f4623.844d78"
            ]
        ]
    },
    {
        "id": "503ec5bd.bd50ec",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "endBufferSample.timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI2.traceHeader.endBufferSample.timestamp",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 480,
        "wires": [
            [
                "e64e365a.ed0de8"
            ]
        ]
    },
    {
        "id": "89edacaf.e808e",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "startBufferSample.timestamp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI2.traceHeader.startBufferSample.timestamp",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 440,
        "wires": [
            [
                "5a176417.98f72c"
            ]
        ]
    },
    {
        "id": "868dbabf.36f108",
        "type": "link in",
        "z": "8b69f966.e7edf8",
        "name": "in_from_HMI",
        "links": [
            "d3b87e.e6a4878"
        ],
        "x": 395,
        "y": 360,
        "wires": [
            [
                "8227c8b8.291ae8"
            ]
        ]
    },
    {
        "id": "7d9002e6.6296bc",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "duration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI2.duration",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "a7cfd161.0b371"
            ]
        ]
    },
    {
        "id": "6a065b22.cd3774",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "645afd95.0c0204",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Duration",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 780,
        "y": 360,
        "wires": []
    },
    {
        "id": "a7cfd161.0b371",
        "type": "function",
        "z": "874e138e.ab76e",
        "name": "add unit duration",
        "func": "msg.payload = msg.payload + \" ms\" // add unit \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "6a065b22.cd3774"
            ]
        ]
    },
    {
        "id": "90e2a128.8bd2f",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "total samples",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI2.traceHeader.totalSamples",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "522096c4.6fed48"
            ]
        ]
    },
    {
        "id": "522096c4.6fed48",
        "type": "ui_text",
        "z": "874e138e.ab76e",
        "group": "645afd95.0c0204",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Total samples",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 760,
        "y": 320,
        "wires": []
    },
    {
        "id": "32e0bfe1.12f23",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "load read command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "read",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "loadedBatch",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 60,
        "wires": [
            [
                "ee018e8f.a3dc6"
            ]
        ]
    },
    {
        "id": "1956f2f4.14807d",
        "type": "switch",
        "z": "8b69f966.e7edf8",
        "name": "Filter msg from Status OPC",
        "property": "stateMachineOPCread",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OPC items loaded",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ready for items",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "items cleared - ready for items",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 260,
        "y": 60,
        "wires": [
            [
                "32e0bfe1.12f23"
            ],
            [
                "32e0bfe1.12f23"
            ],
            [
                "32e0bfe1.12f23"
            ]
        ]
    },
    {
        "id": "c0a4f7d6.64b938",
        "type": "function",
        "z": "8b69f966.e7edf8",
        "name": "read buffer",
        "func": "var msg1 = {\n    payload : null,\n    topic : null\n}\nmsg1.payload = \"read\"\nmsg1.topic = \"buffer\" \n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 240,
        "wires": [
            [
                "ee018e8f.a3dc6"
            ]
        ]
    },
    {
        "id": "8227c8b8.291ae8",
        "type": "function",
        "z": "8b69f966.e7edf8",
        "name": "read HMI",
        "func": "var msg1 = {\n    payload : null,\n    topic : null\n}\nmsg1.payload = \"read\"\nmsg1.topic = \"HMI data\" \n\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 300,
        "wires": [
            [
                "ee018e8f.a3dc6"
            ]
        ]
    },
    {
        "id": "f9656977.d38978",
        "type": "inject",
        "z": "8b69f966.e7edf8",
        "name": "read HMI",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 400,
        "wires": [
            [
                "8227c8b8.291ae8"
            ]
        ]
    },
    {
        "id": "1ee38bb9.ae8274",
        "type": "function",
        "z": "874e138e.ab76e",
        "name": "joint point HMI write data",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1390,
        "y": 760,
        "wires": [
            [
                "84a8a239.ec6b2",
                "d3b87e.e6a4878"
            ]
        ]
    },
    {
        "id": "53f7a8ee.940af8",
        "type": "ui_button",
        "z": "8b69f966.e7edf8",
        "name": "",
        "group": "412cb225.cb759c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Read Buffer to MQTT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "b80985b.0ba6978"
            ]
        ]
    },
    {
        "id": "757cb071.5beec",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "set flow  variables",
        "rules": [
            {
                "t": "set",
                "p": "loadedBatch",
                "pt": "flow",
                "to": "HMI data",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "batchDestination",
                "pt": "flow",
                "to": "HMI data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 140,
        "wires": [
            [
                "ee018e8f.a3dc6"
            ]
        ]
    },
    {
        "id": "b80985b.0ba6978",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "set batchDestination to MQTT",
        "rules": [
            {
                "t": "set",
                "p": "batchDestination",
                "pt": "flow",
                "to": "MQTT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 420,
        "wires": [
            [
                "c0a4f7d6.64b938"
            ]
        ]
    },
    {
        "id": "878c77f3.5934c8",
        "type": "OpcUa-Client",
        "z": "8b69f966.e7edf8",
        "endpoint": "dc32af0d.34a86",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "1",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "OPC UA subscription",
        "x": 620,
        "y": 860,
        "wires": [
            [
                "6c325b03.63a104"
            ]
        ]
    },
    {
        "id": "4119f79a.e9a228",
        "type": "OpcUa-Item",
        "z": "8b69f966.e7edf8",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"bufferDone\"",
        "datatype": "Boolean",
        "value": "",
        "name": "done",
        "x": 387,
        "y": 657,
        "wires": [
            [
                "878c77f3.5934c8"
            ]
        ]
    },
    {
        "id": "31696ff0.c7b04",
        "type": "inject",
        "z": "8b69f966.e7edf8",
        "name": "init app bits",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "4119f79a.e9a228",
                "f12f0f02.ce2f7",
                "c7a5be0f.ffd83",
                "d4cd278.7fa33d8",
                "e0191656.002598"
            ]
        ]
    },
    {
        "id": "f12f0f02.ce2f7",
        "type": "OpcUa-Item",
        "z": "8b69f966.e7edf8",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"status\"",
        "datatype": "Boolean",
        "value": "",
        "name": "status",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "878c77f3.5934c8"
            ]
        ]
    },
    {
        "id": "c7a5be0f.ffd83",
        "type": "OpcUa-Item",
        "z": "8b69f966.e7edf8",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"valid\"",
        "datatype": "Boolean",
        "value": "",
        "name": "valid",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "878c77f3.5934c8"
            ]
        ]
    },
    {
        "id": "d4cd278.7fa33d8",
        "type": "OpcUa-Item",
        "z": "8b69f966.e7edf8",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"busy\"",
        "datatype": "Boolean",
        "value": "",
        "name": "busy",
        "x": 390,
        "y": 840,
        "wires": [
            [
                "878c77f3.5934c8"
            ]
        ]
    },
    {
        "id": "e0191656.002598",
        "type": "OpcUa-Item",
        "z": "8b69f966.e7edf8",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"status\".\"error\"",
        "datatype": "Boolean",
        "value": "",
        "name": "error",
        "x": 390,
        "y": 900,
        "wires": [
            [
                "878c77f3.5934c8"
            ]
        ]
    },
    {
        "id": "6c325b03.63a104",
        "type": "switch",
        "z": "8b69f966.e7edf8",
        "name": "Status switch",
        "property": "browseName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "done",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "busy",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "valid",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "status",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 810,
        "y": 860,
        "wires": [
            [
                "40a04ff9.f7b48"
            ],
            [
                "a3b2480c.6f45a8"
            ],
            [
                "66fa5841.3f4158"
            ],
            [
                "e51b2eeb.8578a"
            ],
            [
                "d00e60b8.7ac96"
            ]
        ]
    },
    {
        "id": "d00e60b8.7ac96",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "Json_HMI.status.status",
        "rules": [
            {
                "t": "set",
                "p": "Json_HMI.status.status",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "status",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 940,
        "wires": [
            [
                "d680cf70.abd68"
            ]
        ]
    },
    {
        "id": "40a04ff9.f7b48",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "Json_HMI.bufferDone",
        "rules": [
            {
                "t": "set",
                "p": "Json_HMI.bufferDone",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "bufferDone",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e51b2eeb.8578a",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "Json_HMI.status.valid",
        "rules": [
            {
                "t": "set",
                "p": "Json_HMI.status.valid",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a3b2480c.6f45a8",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "Json_HMI.status.busy",
        "rules": [
            {
                "t": "set",
                "p": "Json_HMI.status.busy",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "66fa5841.3f4158",
        "type": "change",
        "z": "8b69f966.e7edf8",
        "name": "Json_HMI.status.error",
        "rules": [
            {
                "t": "set",
                "p": "Json_HMI.status.error",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f386395.d0ea5c8",
        "type": "debug",
        "z": "d41311b0.95e7c",
        "name": "fft",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "4519025a.7101cc",
        "type": "switch",
        "z": "d41311b0.95e7c",
        "name": "select batch to MQTT",
        "property": "batchDestination",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "MQTT",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "e413a16c.9d2ab"
            ]
        ]
    },
    {
        "id": "9ad58ba2.4ec948",
        "type": "switch",
        "z": "8b69f966.e7edf8",
        "name": "load batch switch",
        "property": "loadedBatch",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "buffer",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1370,
        "y": 340,
        "wires": [
            [
                "315647e.c675cb8"
            ]
        ]
    },
    {
        "id": "3001de5b.abc022",
        "type": "link out",
        "z": "d41311b0.95e7c",
        "name": "to Charts",
        "links": [
            "ca526d39.2905e",
            "dda6a8b1.fbae28"
        ],
        "x": 885,
        "y": 200,
        "wires": []
    },
    {
        "id": "8e5e2ebb.3a93",
        "type": "mqtt out",
        "z": "d41311b0.95e7c",
        "name": "mqtt out to fft",
        "topic": "fft",
        "qos": "",
        "retain": "",
        "broker": "686854ac.7ba71c",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "d89fcd83.6d30f",
        "type": "link out",
        "z": "874e138e.ab76e",
        "name": "to_selector_from_HMI",
        "links": [
            "6a7907ea.d8e408",
            "608bcf1b.1d844"
        ],
        "x": 645,
        "y": 80,
        "wires": []
    },
    {
        "id": "ad08528b.53231",
        "type": "link in",
        "z": "874e138e.ab76e",
        "name": "from_selector_to_HMI",
        "links": [
            "331342c3.8552ce",
            "6a62f21c.e751cc"
        ],
        "x": 1175,
        "y": 480,
        "wires": [
            [
                "1ee38bb9.ae8274"
            ]
        ]
    },
    {
        "id": "c73d3c2b.d5757",
        "type": "comment",
        "z": "874e138e.ab76e",
        "name": "from selector flow",
        "info": "from selector flow",
        "x": 1120,
        "y": 440,
        "wires": []
    },
    {
        "id": "7bdc4cb0.56be44",
        "type": "comment",
        "z": "874e138e.ab76e",
        "name": "to selector nodes",
        "info": "to selector nodes\nscroll down",
        "x": 700,
        "y": 40,
        "wires": []
    },
    {
        "id": "7ce25538.57e84c",
        "type": "function",
        "z": "874e138e.ab76e",
        "name": "Chart Real",
        "func": "var samples = global.get(\"Json_HMI2.measurements\") \nvar start_timeStamp = global.get(\"Json_HMI2.traceHeader.startBufferSample.timeStamp\")\nconst totalSamples = global.get(\"Json_HMI2.traceHeader.totaSamples\") - 1;\nconst cycletime = global.get(\"Json_HMI2.traceHeader.cycleTime\");\n\n\nvar payload = [{\n    \"series\" : [], \n    \"data\" : [] }]\n\n\nvar i = 0;\nvar ii = 0;\nvar trace = [[],[],[],[],[],[]]\n\nfor (ii = 0; ii < 5; ii++) {\n    i= 0\n    for (i = 0; i < 1001; i++) {\n    trace[ii].push({\"x\": i, \"y\": samples.signalREAL[ii].sampleNo[i]});\n\n}\n\npayload[0].data.push(trace[ii])\npayload[0].series.push(\"Real\"+ String(ii))\n}\n    \n\nmsg.payload = payload;\nmsg.TRACE = trace;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 1560,
        "wires": [
            [
                "ea99581b.270748"
            ]
        ]
    },
    {
        "id": "ea99581b.270748",
        "type": "ui_chart",
        "z": "874e138e.ab76e",
        "name": "",
        "group": "6eced533.6179ac",
        "order": 4,
        "width": "12",
        "height": "8",
        "label": "Real signals",
        "chartType": "line",
        "legend": "true",
        "xformat": "SSS",
        "interpolate": "bezier",
        "nodata": "Waiting for signals",
        "dot": false,
        "ymin": "-12",
        "ymax": "12",
        "removeOlder": 1,
        "removeOlderPoints": "1002",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 890,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "f933d2de.97f61",
        "type": "inject",
        "z": "874e138e.ab76e",
        "name": "Clear chart",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1420,
        "wires": [
            [
                "2832f678.08b7ba"
            ]
        ]
    },
    {
        "id": "2832f678.08b7ba",
        "type": "function",
        "z": "874e138e.ab76e",
        "name": "clear charts",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 1500,
        "wires": [
            [
                "ea99581b.270748",
                "10ec3b84.ca0304",
                "ad4f80f2.77f5a"
            ]
        ]
    },
    {
        "id": "10ec3b84.ca0304",
        "type": "ui_chart",
        "z": "874e138e.ab76e",
        "name": "",
        "group": "6eced533.6179ac",
        "order": 4,
        "width": "12",
        "height": "12",
        "label": "Int signals",
        "chartType": "line",
        "legend": "true",
        "xformat": "SSS",
        "interpolate": "bezier",
        "nodata": "Waiting for signals",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1002",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 880,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "c4b173f9.1a935",
        "type": "function",
        "z": "874e138e.ab76e",
        "name": "Chart Ints",
        "func": "var samples = global.get(\"Json_HMI2.measurements\") \nvar start_timeStamp = global.get(\"Json_HMI2.traceHeader.startBufferSample.timeStamp\")\nconst totalSamples = global.get(\"Json_HMI2.traceHeader.totaSamples\") - 1;\nconst cycletime = global.get(\"Json_HMI2.traceHeader.cycleTime\");\n\n\n\nvar payload = [{\n    \"series\" : [], \n    \"data\" : [] }]\n\n\nvar i = 0;\nvar ii = 0;\nvar trace = [[],[],[],[],[],[]]\n\nfor (ii = 0; ii < 5; ii++) {\n    i= 0\n    for (i = 0; i < 1001; i++) {\n    trace[ii].push({\"x\": i, \"y\": samples.signalINT[ii].sampleNo[i]});\n\n}\n\npayload[0].data.push(trace[ii])\npayload[0].series.push(\"Dword \"+ String(ii))\n}\n    \n\nmsg.payload = payload;\nmsg.TRACE = trace;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 1620,
        "wires": [
            [
                "10ec3b84.ca0304"
            ]
        ]
    },
    {
        "id": "ad4f80f2.77f5a",
        "type": "ui_chart",
        "z": "874e138e.ab76e",
        "name": "",
        "group": "6eced533.6179ac",
        "order": 4,
        "width": "12",
        "height": "12",
        "label": "Word signals",
        "chartType": "line",
        "legend": "true",
        "xformat": "SSS",
        "interpolate": "bezier",
        "nodata": "Waiting for signals",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1002",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 890,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "2805c084.ce08f",
        "type": "function",
        "z": "874e138e.ab76e",
        "name": "Chart WORD",
        "func": "var samples = global.get(\"Json_HMI2.measurements\") \nvar start_timeStamp = global.get(\"Json_HMI2.traceHeader.startBufferSample.timeStamp\")\nconst totalSamples = global.get(\"Json_HMI2.traceHeader.totaSamples\") - 1;\nconst cycletime = global.get(\"Json_HMI2.traceHeader.cycleTime\");\n\n\n\nvar payload = [{\n    \"series\" : [], \n    \"data\" : [] }]\n\n\nvar i = 0;\nvar ii = 0;\nvar trace = [[],[],[],[],[],[]]\n\nfor (ii = 0; ii < 5; ii++) {\n    i= 0\n    for (i = 0; i < 1001; i++) {\n    trace[ii].push({\"x\": i, \"y\": samples.signalDWORD[ii].sampleNo[i]});\n\n}\n\npayload[0].data.push(trace[ii])\npayload[0].series.push(\"Int \"+ String(ii))\n}\n    \n\nmsg.payload = payload;\nmsg.TRACE = trace;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 1680,
        "wires": [
            [
                "ad4f80f2.77f5a"
            ]
        ]
    },
    {
        "id": "dda6a8b1.fbae28",
        "type": "link in",
        "z": "874e138e.ab76e",
        "name": "in for charts",
        "links": [
            "3001de5b.abc022"
        ],
        "x": 275,
        "y": 1500,
        "wires": [
            [
                "2832f678.08b7ba",
                "7ce25538.57e84c",
                "c4b173f9.1a935",
                "2805c084.ce08f"
            ]
        ]
    },
    {
        "id": "bef3f30.407231",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[0].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalRealNo0",
        "x": 1050,
        "y": 1800,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "381dc2d6.7f528e",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[1].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalRealNo1",
        "x": 1050,
        "y": 1860,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "e06a57a7.50fcf8",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[2].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalRealNo2",
        "x": 1050,
        "y": 1920,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "f7be645f.9b7be8",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[3].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalRealNo3",
        "x": 1050,
        "y": 1980,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "ed9991f4.adba2",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"reals\".\"traceSignal\"[4].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalRealNo4",
        "x": 1050,
        "y": 2040,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "4c721ead.5f5a3",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalRealNo0",
        "label": "SelectorSignalRealNo0",
        "tooltip": "",
        "group": "41e44911.714d48",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "SelectorSignalRealNo0",
        "x": 710,
        "y": 1800,
        "wires": [
            [
                "bef3f30.407231"
            ]
        ]
    },
    {
        "id": "b641fc2f.9e052",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalRealNo1",
        "label": "SelectorSignalRealNo1",
        "tooltip": "",
        "group": "41e44911.714d48",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 710,
        "y": 1860,
        "wires": [
            [
                "381dc2d6.7f528e"
            ]
        ]
    },
    {
        "id": "c8440865.26eb98",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalRealNo2",
        "label": "SelectorSignalRealNo2",
        "tooltip": "",
        "group": "41e44911.714d48",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 710,
        "y": 1920,
        "wires": [
            [
                "e06a57a7.50fcf8"
            ]
        ]
    },
    {
        "id": "d7a60e7.f1dccf",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalRealNo3",
        "label": "SelectorSignalRealNo3",
        "tooltip": "",
        "group": "41e44911.714d48",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 710,
        "y": 1980,
        "wires": [
            [
                "f7be645f.9b7be8"
            ]
        ]
    },
    {
        "id": "2a763ddf.65f942",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalRealNo4",
        "label": "SelectorSignalRealNo4",
        "tooltip": "",
        "group": "41e44911.714d48",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "ed9991f4.adba2"
            ]
        ]
    },
    {
        "id": "1487b868.0365e8",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[0].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalIntNo0",
        "x": 1040,
        "y": 2120,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "de585dc1.7535a",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalIntNo0",
        "label": "SelectorSignalIntNo0",
        "tooltip": "",
        "group": "95bebd27.55439",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 700,
        "y": 2120,
        "wires": [
            [
                "1487b868.0365e8"
            ]
        ]
    },
    {
        "id": "40ff8514.ff0c4c",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalIntNo1",
        "label": "SelectorSignalIntNo1",
        "tooltip": "",
        "group": "95bebd27.55439",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 700,
        "y": 2180,
        "wires": [
            [
                "950f2d4b.9975a"
            ]
        ]
    },
    {
        "id": "afd0c063.3edf2",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalIntNo2",
        "label": "SelectorSignalIntNo2",
        "tooltip": "",
        "group": "95bebd27.55439",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 700,
        "y": 2240,
        "wires": [
            [
                "f61d8511.7cb698"
            ]
        ]
    },
    {
        "id": "db338a68.5e3db8",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalIntNo3",
        "label": "SelectorSignalIntNo3",
        "tooltip": "",
        "group": "95bebd27.55439",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 700,
        "y": 2300,
        "wires": [
            [
                "2be7fa92.bedef6"
            ]
        ]
    },
    {
        "id": "ebabfd3e.a56ee",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalIntNo4",
        "label": "SelectorSignalIntNo4",
        "tooltip": "",
        "group": "95bebd27.55439",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 700,
        "y": 2360,
        "wires": [
            [
                "9438fa93.f19ec8"
            ]
        ]
    },
    {
        "id": "950f2d4b.9975a",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[1].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalIntNo1",
        "x": 1040,
        "y": 2180,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "f61d8511.7cb698",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[2].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalIntNo2",
        "x": 1040,
        "y": 2240,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "2be7fa92.bedef6",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[3].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalIntNo3",
        "x": 1040,
        "y": 2300,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "9438fa93.f19ec8",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"ints\".\"traceSignal\"[4].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalIntNo4",
        "x": 1040,
        "y": 2360,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "a691fa32.f6b9f8",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[0].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalWordNo0",
        "x": 1052,
        "y": 2439,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "3f85456f.f53f5a",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalDWordNo0",
        "label": "SelectorSignalDWordNo0",
        "tooltip": "",
        "group": "26105fe5.6f735",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 712,
        "y": 2439,
        "wires": [
            [
                "a691fa32.f6b9f8"
            ]
        ]
    },
    {
        "id": "f46b2607.bdc658",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[1].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalWordNo1",
        "x": 1050,
        "y": 2500,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "e149b055.6e243",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalDWordNo1",
        "label": "SelectorSignalDWordNo1",
        "tooltip": "",
        "group": "26105fe5.6f735",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 710,
        "y": 2500,
        "wires": [
            [
                "f46b2607.bdc658"
            ]
        ]
    },
    {
        "id": "8cefa3c.cffe86",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[0].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.reals.traceSignal[0].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1800,
        "wires": [
            [
                "4c721ead.5f5a3"
            ]
        ]
    },
    {
        "id": "e13ada11.9a8e98",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[1].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.reals.traceSignal[1].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1860,
        "wires": [
            [
                "b641fc2f.9e052"
            ]
        ]
    },
    {
        "id": "1b4477e6.450198",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[2].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.reals.traceSignal[2].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1920,
        "wires": [
            [
                "c8440865.26eb98"
            ]
        ]
    },
    {
        "id": "8f54aaea.c59f98",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[3].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.reals.traceSignal[3].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1980,
        "wires": [
            [
                "d7a60e7.f1dccf"
            ]
        ]
    },
    {
        "id": "a8895279.8b016",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[4].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.reals.traceSignal[4].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2040,
        "wires": [
            [
                "2a763ddf.65f942"
            ]
        ]
    },
    {
        "id": "e0b16b8e.f85048",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[0].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.ints.traceSignal[0].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2120,
        "wires": [
            [
                "de585dc1.7535a"
            ]
        ]
    },
    {
        "id": "a24e81d5.4ae98",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[1].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.ints.traceSignal[1].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2180,
        "wires": [
            [
                "40ff8514.ff0c4c"
            ]
        ]
    },
    {
        "id": "1e7584b9.f629db",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[2].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.ints.traceSignal[2].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2240,
        "wires": [
            [
                "afd0c063.3edf2"
            ]
        ]
    },
    {
        "id": "6cd8e5a2.5aa4bc",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[3].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.ints.traceSignal[3].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2300,
        "wires": [
            [
                "db338a68.5e3db8"
            ]
        ]
    },
    {
        "id": "1a07a0d2.3be95f",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[4].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.ints.traceSignal[4].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2360,
        "wires": [
            [
                "ebabfd3e.a56ee"
            ]
        ]
    },
    {
        "id": "6b980a3b.235034",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[2].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalWordNo2",
        "x": 1050,
        "y": 2560,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "40529064.59b22",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalDWordNo2",
        "label": "SelectorSignalDWordNo2",
        "tooltip": "",
        "group": "26105fe5.6f735",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 710,
        "y": 2560,
        "wires": [
            [
                "6b980a3b.235034"
            ]
        ]
    },
    {
        "id": "4c0540d0.53998",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[3].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalWordNo3",
        "x": 1048,
        "y": 2621,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "4872d689.018d58",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalDWordNo3",
        "label": "SelectorSignalDWordNo3",
        "tooltip": "",
        "group": "26105fe5.6f735",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 708,
        "y": 2621,
        "wires": [
            [
                "4c0540d0.53998"
            ]
        ]
    },
    {
        "id": "242fda41.8c6c76",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[0].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.dwords.traceSignal[0].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2440,
        "wires": [
            [
                "3f85456f.f53f5a"
            ]
        ]
    },
    {
        "id": "4b68b44f.1fb48c",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[1].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.dwords.traceSignal[1].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2500,
        "wires": [
            [
                "e149b055.6e243"
            ]
        ]
    },
    {
        "id": "46036053.42707",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[2].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.dwords.traceSignal[2].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2560,
        "wires": [
            [
                "40529064.59b22"
            ]
        ]
    },
    {
        "id": "e34a67dc.602058",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[3].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.dwords.traceSignal[3].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2620,
        "wires": [
            [
                "4872d689.018d58"
            ]
        ]
    },
    {
        "id": "434391cc.d2462",
        "type": "change",
        "z": "874e138e.ab76e",
        "name": "traceSignal[4].signalSelector",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Json_HMI.signals.dwords.traceSignal[4].signalSelector",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2680,
        "wires": [
            [
                "4c1d55e.ea286ac"
            ]
        ]
    },
    {
        "id": "e9756493.100fb8",
        "type": "OpcUa-Item",
        "z": "874e138e.ab76e",
        "item": "ns=3;s=\"LEdgeBuffer_EdgeInterface\".\"signals\".\"dwords\".\"traceSignal\"[4].\"signalSelector\"",
        "datatype": "Int16",
        "value": "",
        "name": "SelectorSignalWordNo4",
        "x": 1050,
        "y": 2680,
        "wires": [
            [
                "6a62f21c.e751cc"
            ]
        ]
    },
    {
        "id": "4c1d55e.ea286ac",
        "type": "ui_text_input",
        "z": "874e138e.ab76e",
        "name": "SelectorSignalDWordNo4",
        "label": "SelectorSignalDWordNo4",
        "tooltip": "",
        "group": "26105fe5.6f735",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "",
        "x": 710,
        "y": 2680,
        "wires": [
            [
                "e9756493.100fb8"
            ]
        ]
    },
    {
        "id": "608bcf1b.1d844",
        "type": "link in",
        "z": "874e138e.ab76e",
        "name": "to_selector",
        "links": [
            "d89fcd83.6d30f"
        ],
        "x": 115,
        "y": 2100,
        "wires": [
            [
                "8cefa3c.cffe86",
                "e13ada11.9a8e98",
                "1b4477e6.450198",
                "8f54aaea.c59f98",
                "a8895279.8b016",
                "e0b16b8e.f85048",
                "a24e81d5.4ae98",
                "1e7584b9.f629db",
                "6cd8e5a2.5aa4bc",
                "242fda41.8c6c76",
                "1a07a0d2.3be95f",
                "4b68b44f.1fb48c",
                "46036053.42707",
                "e34a67dc.602058",
                "434391cc.d2462"
            ]
        ]
    },
    {
        "id": "6a62f21c.e751cc",
        "type": "link out",
        "z": "874e138e.ab76e",
        "name": "from_selector",
        "links": [
            "ad08528b.53231"
        ],
        "x": 1295,
        "y": 2180,
        "wires": []
    },
    {
        "id": "d06bded4.355dc",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "GetStatus",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<GetStatus xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"/>\n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "88ea2c40.56b0a",
        "type": "http request",
        "z": "a0568e71.72952",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 990,
        "y": 160,
        "wires": [
            [
                "705fabcb.519744"
            ]
        ]
    },
    {
        "id": "236450f8.a7b8a",
        "type": "xml",
        "z": "a0568e71.72952",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 510,
        "y": 580,
        "wires": [
            [
                "ed80557e.beba28"
            ]
        ]
    },
    {
        "id": "57f9a1f9.97185",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "Read",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n <Read xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\">\n  <Options\n    ReturnErrorText=\"true\"\n    ReturnItemTime=\"true\"\n    ReturnItemName=\"true\"\n    LocaleID=\"en\"/>\n  <ItemList{{#payload.ItemPath}} ItemPath=\"{{{payload.ItemPath}}}\"{{/payload.ItemPath}}>\n    {{#payload.ItemList}}\n       <Items{{#ItemPath}} ItemPath=\"{{{ItemPath}}}\"{{/ItemPath}} ItemName=\"{{{ItemName}}}\"{{#ClientItemHandle}} ClientItemHandle=\"{{{ClientItemHandle}}}\"{{/ClientItemHandle}}/>\n    {{/payload.ItemList}}\n  </ItemList>\n </Read>\t  \n</soap:Body></soap:Envelope>\n",
        "output": "str",
        "x": 570,
        "y": 100,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "60c6ce6.1d42f3",
        "type": "switch",
        "z": "a0568e71.72952",
        "name": "action",
        "property": "action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GetStatus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Read",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Write",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Subscribe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionPolledRefresh",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionCancel",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Browse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GetProperties",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 9,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "d06bded4.355dc"
            ],
            [
                "57f9a1f9.97185"
            ],
            [
                "29092e47.e835a2"
            ],
            [
                "6335ea21.ad4a54"
            ],
            [
                "957a24a0.800c58"
            ],
            [
                "9ffb90ef.88ccd"
            ],
            [
                "1c5abe9c.425c31"
            ],
            [
                "67d14704.f3e058"
            ],
            [
                "7c0160cd.337dd"
            ]
        ]
    },
    {
        "id": "1c5abe9c.425c31",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "Browse",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<Browse xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"\n\tItemName=\"{{{payload.ItemName}}}\"\n>\n</Browse>\t  \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 580,
        "y": 300,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "7c0160cd.337dd",
        "type": "function",
        "z": "a0568e71.72952",
        "name": "Error",
        "func": "node.error('Unknown SOAP action', msg)\n",
        "outputs": 0,
        "noerr": 0,
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "8f627fde.e3c0f",
        "type": "switch",
        "z": "a0568e71.72952",
        "name": "action",
        "property": "action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GetStatus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Read",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Write",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Subscribe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionPolledRefresh",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SubscriptionCancel",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Browse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GetProperties",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 230,
        "y": 880,
        "wires": [
            [
                "35897351.3c2adc"
            ],
            [
                "7e8d6d76.e0a0c4"
            ],
            [
                "2e7040d.343cbc"
            ],
            [
                "b865212e.e1d0b"
            ],
            [
                "8e60984d.cfcf18"
            ],
            [
                "6f1e64f4.bcbcac"
            ],
            [
                "e2e40866.9ce498"
            ],
            [
                "c93f193f.e756b8"
            ]
        ]
    },
    {
        "id": "4ac0e773.fc42f8",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "Response",
        "links": [
            "2a3004a5.86317c"
        ],
        "x": 1295,
        "y": 140,
        "wires": []
    },
    {
        "id": "7e8d6d76.e0a0c4",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "ReadResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.ReadResponse.RItemList.Items.{\t\"ItemName\":$.\"$\".ItemName,\t\"ClientItemHandle\":$.\"$\".ClientItemHandle,\t\"Timestamp\":$.\"$\".Timestamp,\t\"value\": Value.\"_\",\t\"type\": Value.\"$\".\"xsi:type\",\t\"Quality\": Quality[0].\"$\".QualityField\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 820,
        "wires": [
            [
                "6d7a466.2d910b8"
            ]
        ]
    },
    {
        "id": "6d7a466.2d910b8",
        "type": "split",
        "z": "a0568e71.72952",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 710,
        "y": 820,
        "wires": [
            [
                "4dc9e078.2774"
            ]
        ]
    },
    {
        "id": "4dc9e078.2774",
        "type": "switch",
        "z": "a0568e71.72952",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "xsd:float",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:double",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:int",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:unsignedInt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "xsd:string",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 830,
        "y": 820,
        "wires": [
            [
                "d232b24f.36022"
            ],
            [
                "d232b24f.36022"
            ],
            [
                "d232b24f.36022"
            ],
            [
                "d232b24f.36022"
            ],
            [
                "f79accb.58b8b3"
            ],
            [
                "b87f32a3.f1562",
                "bf0f1ea6.1ef93"
            ]
        ]
    },
    {
        "id": "b87f32a3.f1562",
        "type": "join",
        "z": "a0568e71.72952",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 840,
        "wires": [
            [
                "bfb860b4.f3ac9"
            ]
        ]
    },
    {
        "id": "d232b24f.36022",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "number",
        "rules": [
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "$number(payload.value)",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "payload.type",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 780,
        "wires": [
            [
                "b87f32a3.f1562"
            ]
        ]
    },
    {
        "id": "f79accb.58b8b3",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "string",
        "rules": [
            {
                "t": "delete",
                "p": "payload.type",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 820,
        "wires": [
            [
                "b87f32a3.f1562"
            ]
        ]
    },
    {
        "id": "cda10e22.075af",
        "type": "function",
        "z": "a0568e71.72952",
        "name": "Warn",
        "func": "node.warn(msg.payload)\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "f713686b.a04448",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "12f2c851.6e7428"
        ],
        "x": 655,
        "y": 780,
        "wires": []
    },
    {
        "id": "12f2c851.6e7428",
        "type": "link in",
        "z": "a0568e71.72952",
        "name": "Done",
        "links": [
            "f713686b.a04448",
            "bfb860b4.f3ac9",
            "c7d068d5.6d5d08",
            "d9af02c5.7f4f6",
            "1ebc5fbf.98ebf",
            "5e695cd6.f557f4",
            "667f0f18.9d189",
            "f3cc9a14.e34458",
            "a93b46ec.4c71e8",
            "7d15a46f.55944c",
            "2854f3b9.1b98fc",
            "2ff36629.b3c0aa"
        ],
        "x": 1195,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "bfb860b4.f3ac9",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "12f2c851.6e7428"
        ],
        "x": 1235,
        "y": 840,
        "wires": []
    },
    {
        "id": "c7d068d5.6d5d08",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "12f2c851.6e7428"
        ],
        "x": 695,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2a3004a5.86317c",
        "type": "link in",
        "z": "a0568e71.72952",
        "name": "Transform",
        "links": [
            "4ac0e773.fc42f8"
        ],
        "x": 55,
        "y": 540,
        "wires": [
            [
                "9fb2f08f.b0814"
            ]
        ]
    },
    {
        "id": "bf0f1ea6.1ef93",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "type",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "'Read. Unhandled type: ' & payload.type",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 880,
        "wires": [
            [
                "cda10e22.075af"
            ]
        ]
    },
    {
        "id": "705fabcb.519744",
        "type": "switch",
        "z": "a0568e71.72952",
        "name": "statusCode",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "jsonata_exp",
                "v": "statusCode in ['ECONNREFUSED', 'ETIMEDOUT']",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1150,
        "y": 160,
        "wires": [
            [
                "4ac0e773.fc42f8"
            ],
            [],
            [
                "d8ec6e2f.a08d7"
            ]
        ]
    },
    {
        "id": "d8ec6e2f.a08d7",
        "type": "function",
        "z": "a0568e71.72952",
        "name": "Error",
        "func": "node.error(\"Http Error. statusCode=\"+msg.statusCode, msg);\n",
        "outputs": 0,
        "noerr": 0,
        "x": 1310,
        "y": 200,
        "wires": []
    },
    {
        "id": "1e5b953.aa6bf6b",
        "type": "comment",
        "z": "a0568e71.72952",
        "name": "statusCodes",
        "info": "msg.statusCode =   \n= 200, ok  \n= 500, Internal error, no error thrown from http request node. Throw error with function node.  \n= ECONNREFUSED, Error already thrown from http request node. Dont produce additional errors  ",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "b050323f.b395f",
        "type": "comment",
        "z": "a0568e71.72952",
        "name": "dropping namespace",
        "info": "https://stackoverflow.com/questions/4505103/how-to-remove-xml-namespaces-using-javascript\n",
        "x": 400,
        "y": 620,
        "wires": []
    },
    {
        "id": "eb250a13.029f88",
        "type": "function",
        "z": "a0568e71.72952",
        "name": "namespace",
        "func": "// Options to drop namespace for xml node\n// from xml2js lib/processors.js\nprefixMatch = new RegExp(/(?!xmlns)^.*:/);\nfunction stripPrefix(str){\n    return str.replace(prefixMatch, '');\n}\nmsg.options = {\"tagNameProcessors\": [stripPrefix]}\nreturn msg;\n\n/*msg.options = {\"xmlns\":true,}*/\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 580,
        "wires": [
            [
                "236450f8.a7b8a"
            ]
        ],
        "info": "Dropping namespace\n\nSetting options to xml2js\n\nhttps://github.com/Leonidas-from-XIV/node-xml2js/blob/master/README.md#options\n"
    },
    {
        "id": "e2e40866.9ce498",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "BrowseResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.BrowseResponse.Elements.{\t\"Name\":*.Name,\t\"ItemName\":*.ItemName,\t\"IsItem\":$boolean(*.IsItem),\t\"HasChildren\":$boolean(*.HasChildren)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "c7d068d5.6d5d08"
            ]
        ]
    },
    {
        "id": "9fb2f08f.b0814",
        "type": "switch",
        "z": "a0568e71.72952",
        "name": "Raw?",
        "property": "options.raw",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 540,
        "wires": [
            [
                "d6e1bf57.9810a"
            ],
            [
                "eb250a13.029f88"
            ]
        ]
    },
    {
        "id": "d6e1bf57.9810a",
        "type": "xml",
        "z": "a0568e71.72952",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "a93b46ec.4c71e8"
            ]
        ]
    },
    {
        "id": "67d14704.f3e058",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "GetProperties",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n\t<GetProperties ReturnPropertyValues=\"true\" xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\">\n\t\t<ItemIDs ItemName=\"{{{payload.ItemName}}}\" />\n\t\t<PropertyNames>accessRights</PropertyNames>\n\t\t<PropertyNames>dataType</PropertyNames>\n\t</GetProperties>\n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 600,
        "y": 340,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "8daff6d4.368e78",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 875,
        "y": 160,
        "wires": [
            [
                "88ea2c40.56b0a"
            ]
        ],
        "l": false
    },
    {
        "id": "667f0f18.9d189",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "12f2c851.6e7428"
        ],
        "x": 815,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c93f193f.e756b8",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "GetPropertiesResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.GetPropertiesResponse.PropertyLists{\t\"ItemName\":*.ItemName,\tProperties[0].\"$\".Name: Properties[0].Value.\"_\",\tProperties[1].\"$\".Name: Properties[1].Value.\"_\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "667f0f18.9d189"
            ]
        ]
    },
    {
        "id": "ed80557e.beba28",
        "type": "switch",
        "z": "a0568e71.72952",
        "name": "Errors?",
        "property": "$exists(**.Errors)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 580,
        "wires": [
            [
                "4771771.0d32c88"
            ],
            [
                "d3a2a2e0.14737"
            ]
        ]
    },
    {
        "id": "4771771.0d32c88",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.Errors.*.ID",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 560,
        "wires": [
            [
                "b821e0a3.f58ac"
            ]
        ]
    },
    {
        "id": "b821e0a3.f58ac",
        "type": "function",
        "z": "a0568e71.72952",
        "name": "Error",
        "func": "node.error(\"OPC XML Error: \" + msg.payload, msg);\n",
        "outputs": 0,
        "noerr": 0,
        "x": 1010,
        "y": 560,
        "wires": []
    },
    {
        "id": "d3a2a2e0.14737",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "f635cca.b0f323"
        ],
        "x": 775,
        "y": 620,
        "wires": []
    },
    {
        "id": "f635cca.b0f323",
        "type": "link in",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "d3a2a2e0.14737"
        ],
        "x": 60,
        "y": 880,
        "wires": [
            [
                "8f627fde.e3c0f"
            ]
        ]
    },
    {
        "id": "a93b46ec.4c71e8",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "12f2c851.6e7428"
        ],
        "x": 455,
        "y": 520,
        "wires": []
    },
    {
        "id": "3e321531.96860a",
        "type": "catch",
        "z": "a0568e71.72952",
        "name": "",
        "scope": [
            "c93f193f.e756b8"
        ],
        "uncaught": false,
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "6a21b5f2.bcb84c"
            ]
        ]
    },
    {
        "id": "ad008474.6637b8",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.GetPropertiesResponse.PropertyLists",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1100,
        "wires": [
            [
                "667f0f18.9d189"
            ]
        ]
    },
    {
        "id": "6a21b5f2.bcb84c",
        "type": "function",
        "z": "a0568e71.72952",
        "name": "Warning",
        "func": "node.warn(\"Unexpected GetPropertiesResponse\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "ad008474.6637b8"
            ]
        ]
    },
    {
        "id": "4e95808c.a3252",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "Subscribe",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<Subscribe xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"\n    ReturnValuesOnReply=\"true\" \n    SubscriptionPingRate=\"{{payload.SubscriptionPingRate}}\"\n    >\n    <Options\n        ReturnErrorText=\"true\"\n        ReturnItemTime=\"true\"\n        ReturnItemName=\"true\"\n        />\n    <ItemList\n        {{#payload.ItemPath}} ItemPath=\"{{{payload.ItemPath}}}\"{{/payload.ItemPath}}\n        {{#payload.requestedSamplingRate}} requestedSamplingRate=\"{{{payload.requestedSamplingRate}}}\"{{/payload.requestedSamplingRate}}\n        >\n        {{#payload.ItemList}}\n        <Items\n            ItemName=\"{{{ItemName}}}\"{{#ItemPath}} \n            ItemPath=\"{{{ItemPath}}}\"{{/ItemPath}}{{#ClientItemHandle}}\n            ClientItemHandle=\"{{{ClientItemHandle}}}\"{{/ClientItemHandle}}\n            />\n        {{/payload.ItemList}}\n    </ItemList>\n</Subscribe>\t  \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 700,
        "y": 180,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "63e32c20.b76e94",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "env",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "($boolean($env('action'))) ? $env('action'): $boolean(action) ? action : \"GetStatus\"\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "($boolean($env('url'))) ? $env('url'): $boolean(url) ? url : \"\"\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "(\t$raw := (\"raw\" in $keys(options)) ? options.raw: $env('raw');\t{\"raw\":$boolean($raw)}\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 180,
        "wires": [
            [
                "700dcd8e.8e42d4"
            ]
        ]
    },
    {
        "id": "6335ea21.ad4a54",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload.SubscriptionPingRate",
                "pt": "msg",
                "to": "(\"SubscriptionPingRate\" in $keys(payload)) ? payload.SubscriptionPingRate: 60000\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.requestedSamplingRate",
                "pt": "msg",
                "to": "(\"requestedSamplingRate\" in $keys(payload)) ? payload.requestedSamplingRate: 1000\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 180,
        "wires": [
            [
                "4e95808c.a3252"
            ]
        ]
    },
    {
        "id": "b865212e.e1d0b",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "SubscribeResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.SubscribeResponse.{\t\"ServerSubHandle\":$.\"$\".ServerSubHandle\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 900,
        "wires": [
            [
                "7d15a46f.55944c"
            ]
        ]
    },
    {
        "id": "7d15a46f.55944c",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "12f2c851.6e7428"
        ],
        "x": 615,
        "y": 900,
        "wires": []
    },
    {
        "id": "957a24a0.800c58",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "SubscriptionPolledRefresh",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<SubscriptionPolledRefresh xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\" \n    ReturnAllItems=\"true\"> \n\t<Options ReturnErrorText=\"true\" ReturnItemTime=\"true\" ReturnItemName=\"true\" LocaleID=\"en\" /> \n\t<ServerSubHandles>{{{payload.ServerSubHandle}}}</ServerSubHandles>\n</SubscriptionPolledRefresh> \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "9ffb90ef.88ccd",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "SubscriptionCancel",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n<SubscriptionCancel xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"\n\tServerSubHandle=\"{{{payload.ServerSubHandle}}}\"/> \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "29092e47.e835a2",
        "type": "template",
        "z": "a0568e71.72952",
        "name": "Write",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope \nxmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<soap:Body>\n <Write xmlns=\"http://opcfoundation.org/webservices/XMLDA/1.0/\"  ReturnValuesOnReply=\"true\">\n  <Options\n    ReturnErrorText=\"true\"\n    ReturnItemTime=\"true\"\n    ReturnItemName=\"true\"\n    ReturnItemPath=\"true\"\n    LocaleID=\"en\" \n    />\n  <ItemList{{#payload.ItemPath}} ItemPath=\"{{{payload.ItemPath}}}\"{{/payload.ItemPath}}>\n    {{#payload.ItemList}}\n       <Items  ItemName=\"{{{ItemName}}}\"{{#ItemPath}} ItemPath=\"{{{ItemPath}}}\"{{/ItemPath}}{{#ClientItemHandle}} ClientItemHandle=\"{{{ClientItemHandle}}}\"{{/ClientItemHandle}}>\n            <Value xsi:type=\"{{type}}\">{{value}}</Value>\n        </Items>\n    {{/payload.ItemList}}\n  </ItemList>\n </Write>\t  \n</soap:Body>\n</soap:Envelope>\n",
        "output": "str",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "8daff6d4.368e78"
            ]
        ]
    },
    {
        "id": "700dcd8e.8e42d4",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "header",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"SOAPAction\":\"http://opcfoundation.org/webservices/XMLDA/1.0/\" & action,\t   \"Content-Type\":\"text/xml\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "60c6ce6.1d42f3"
            ]
        ]
    },
    {
        "id": "8e60984d.cfcf18",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "SubscriptionPolledRefreshResult",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.SubscriptionPolledRefreshResponse.RItemList.Items.{\t\"ItemName\":$.\"$\".ItemName,\t\"ClientItemHandle\":$.\"$\".ClientItemHandle,\t\"Timestamp\":$.\"$\".Timestamp,\t\"value\": Value.\"_\",\t\"type\": Value.\"$\".\"xsi:type\",\t\"Quality\": Quality[0]\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 940,
        "wires": [
            [
                "6d7a466.2d910b8"
            ]
        ]
    },
    {
        "id": "6f1e64f4.bcbcac",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "SubscriptionCancelResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.SubscriptionCancelResponse.*.ClientRequestHandle{\t\"ClientRequestHandle\":$\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 980,
        "wires": [
            [
                "2854f3b9.1b98fc"
            ]
        ]
    },
    {
        "id": "2854f3b9.1b98fc",
        "type": "link out",
        "z": "a0568e71.72952",
        "name": "",
        "links": [
            "12f2c851.6e7428"
        ],
        "x": 675,
        "y": 980,
        "wires": []
    },
    {
        "id": "2e7040d.343cbc",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "ReadResponse",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.WriteResponse.RItemList.Items.{\t\"ItemName\":$.\"$\".ItemName,\t\"Timestamp\":$.\"$\".Timestamp,\t\"value\": Value.\"_\",\t\"type\": Value.\"$\".\"xsi:type\"\t}[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 860,
        "wires": [
            [
                "6d7a466.2d910b8"
            ]
        ]
    },
    {
        "id": "35897351.3c2adc",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.Status{\t\"StatusInfo\":StatusInfo,\t\"VendorInfo\":VendorInfo,\t\"SupportedLocaleIDs\":SupportedLocaleIDs,\t\"SupportedInterfaceVersions\":SupportedInterfaceVersions,\t\"StartTime\":*.StartTime,\t\"ProductVersion\":*.ProductVersion,\t\"ServerState\":$$.**.ServerState\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 780,
        "wires": [
            [
                "a38f31fa.bd3fc"
            ]
        ]
    },
    {
        "id": "a38f31fa.bd3fc",
        "type": "change",
        "z": "a0568e71.72952",
        "name": "string cleanup",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/* Straight strings or \"xsd:string\" */\t(\t$clean := function($o) {$join([\t$filter($o, function($v,$i,$a) {\"xsi:type\" in $keys($v.\"$\") ? true: false}).\"_\",\t$filter($o, function($v,$i,$a) {\"xsi:type\" in $keys($v.\"$\") ? false: true})\t], \",\")};\t{\t\"StatusInfo\": $clean(payload.StatusInfo),\t\"VendorInfo\": $clean(payload.VendorInfo),\t\"SupportedLocaleIDs\": $clean(payload.SupportedLocaleIDs),\t\"SupportedInterfaceVersions\": $clean(payload.SupportedInterfaceVersions),\t\"StartTime\":payload.StartTime,\t\"ProductVersion\":payload.ProductVersion,\t\"ServerState\":payload.ServerState\t}\t\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 780,
        "wires": [
            [
                "f713686b.a04448"
            ]
        ]
    }
]